!function(){"use strict";function a(a,b){var c=new FileReader;c.onload=function(a){b(a.target.result)},c.readAsDataURL(a)}var b={crop:function(a,b,c){return a?(a.$cropable=!0,!0):!1},count:function(a,b,c){var d,e,f=!1,g=!0,h=a?b.length+1:b.length,i=c.limit,j=parseInt(i,10),k=i.split(",");return""===i||"0"===i?d=e=0:"*"===i||","===i||"."===i?d=e=-1:2===k.length?(d=""===k[0]?-1:parseInt(k[0]),e=""===k[1]?-1:parseInt(k[1]),"NaN"!==d&&"NaN"!==e||(f=!0,console.error("Bad limit value for count : "+i))):"NaN"!==j?d=e=j:(f=!0,console.error("Unhandled limit value for count : "+i)),void 0!==d&&void 0!==e?(d>e&&-1!==e&&(f=!0,console.error("Count minimum limit must be inferior to maximum limit : "+d+">"+e)),h>e&&-1!==e?f=!0:d>h&&-1!==d&&(g=!1)):f=!0,f&&(a&&(a.error=c.onError),g=!1),g},thumbnail:function(b,c,d){return b?(b.$thumbnailable=!0,b.$crop&&b.$crop.source_after_crop?b.$thumbnail=b.$crop.source_after_crop:b.$source_url?b.$thumbnail=b.$source_url:b.$source_file&&(d&&d.limit!==!0?b.$thumbnail=d.limit(b.$source_file,thumb.config):a(b.$source_file,function(a){b.$thumbnail=a})),!0):!1},validator:function(a,b,c){if(!a)return!1;var d=c.limit(a);return d.length>0?(a&&(a.error=c.onError),!1):!0}};angular.module("multiUpload",["ngFileUpload"]),angular.module("multiUpload").directive("upload",[function(c){return{restrict:"E",scope:{url:"=",multipartName:"=",method:"@",files:"=filesList",validRules:"=",_fileDownloadLink:"=fileDownloadLink",_fileOnUploadEndCB:"=fileOnUploadEnd",_fileOnCancelCB:"=fileOncancel",_fileRenderSizeCB:"=fileRenderSize",_fileOnProgressCB:"=fileOnprogress",_fileUploadError:"=fileUploadError",fileExtensionError:"@",simultaneousMax:"@simultaneous"},transclude:!0,replace:!0,templateUrl:"directives/templates/upload.directive.html",link:function(a,b,c){if(angular.isUndefined(a.files))throw"files-list parameter is missing and is required.";if(angular.isUndefined(a.url))throw"url parameter is missing and is required.";a.dropable="dropable"in c,a.orderable="orderable"in c,a.selectable="selectable"in c,a.allowMultiple="multiple"in c},controller:["$scope","Upload",function(c,d){function e(a){var b;if(!o||0===Object.keys(o).length)return b;b=null;for(var c in o)if(o.hasOwnProperty(c)){var d=c.split(",");if(-1!==d.indexOf(a)&&(b=o[c]),null!==b)break}return b}function f(a){var b;if(!o||0===Object.keys(o).length)return b;b=null;for(var c in o)if(o.hasOwnProperty(c)){var d=c.split(",");if(-1!==d.indexOf(a)&&(b=c),null!==b)break}return b}function g(a,b,d){if(b=b?b:!1,d=d?d:c.files,!a)return[];var e=a.split(","),f=[];return angular.forEach(d,function(a){-1===e.indexOf(a.$extension)||(!b||a.error)&&b||f.push(a)}),f}function h(a,d,h){d=d?d:c.files,h=h?h:!1;var i=f(a.$extension);a.error=!0;var j=g(i,!0,d);delete a.error;var k=e(a.$extension);if(!k)return a.error=c.fileExtensionError,-1;for(var l in k)if(k.hasOwnProperty(l)&&b[l](a,j,k[l])!==!0)return h||a.error?(!h&&a.error,-1):1;return 0}function i(a,b){a=a?a:c.files,b=b?b:!1;for(var d=0;d<a.length;d++){var e=h(a[d],a,b);if(b&&0!==e)return!1;if(-1===e)return!1}return!0}function j(a,c,d,e,f){c===!0&&(f?delete a.$crop:(a.$crop.source_after_crop=d,a.$crop.bounds=e)),a.$thumbnailable&&b.thumbnail(a,null,null)}function k(a,b,c){a.progress={value:c,status:b}}function l(a,b){a.error=b}function m(){c.files.length&&angular.forEach(c.files,function(a){if(a.error&&a.progress.status!==c.UPLOAD_ERROR&&0===h(a)&&delete a.error,c.simultaneousCur<c.simultaneousMax&&a.progress.status===c.UPLOAD_PENDING&&!a.error&&a.$source_file){k(a,c.UPLOAD_TRANSFERING,0),c.simultaneousCur++;var b={};b[c.multipartName?angular.isFunction(c.multipartName)?c.multipartName(a):c.multipartName:"key"]=a.$source_file,a.$upload=d.upload({url:angular.isFunction(c.url)?c.url(a):c.url,data:b,method:c.method}).then(function(b){k(a,c.UPLOAD_COMPLETE,100),c.simultaneousCur--,c.fileOnUploadEndCB(a,b.status,b.data)},function(b){k(a,c.UPLOAD_ERROR,0),l(a,c.fileUploadError(a,b.status,b.data)),c.simultaneousCur--},function(b){k(a,c.UPLOAD_TRANSFERING,parseInt(100*b.loaded/b.total))})}})}function n(a,b){a&&a.length&&(angular.forEach(a,function(a){if(!a.name)return void console.warn('add file to files failed because file object does not have "name" key.');var d=a.name.substr((~-a.name.lastIndexOf(".")>>>0)+1).toLowerCase(),e={name:a.name,error:!0,$extension:d};b?(k(e,c.UPLOAD_OLD,100),e.$source_url=c.fileDownloadLink(e)):(k(e,c.UPLOAD_PENDING,0),e.$source_file=a),c.files.push(e)}),m())}c.UPLOAD_PENDING=1,c.UPLOAD_TRANSFERING=2,c.UPLOAD_COMPLETE=3,c.UPLOAD_ERROR=4,c.UPLOAD_OLD=5,c.simultaneousCur=0,c.allowedExtensions="",c.simultaneousMax=c.simultaneousMax?c.simultaneousMax:999,c.fileOnUploadEndCB=angular.isFunction(c._fileOnUploadEndCB)?c._fileOnUploadEndCB:function(a,b,c){},c.fileUploadError=angular.isFunction(c._fileUploadError)?c._fileUploadError:function(a,b,c){return"upload error"},c.fileDownloadLink=angular.isFunction(c._fileDownloadLink)?c._fileDownloadLink:function(a){return a.name},c.fileOnCancelCB=angular.isFunction(c._fileOnCancelCB)?c._fileOnCancelCB:function(a,b,c){},c.fileRenderSizeCB=angular.isFunction(c._fileRenderSizeCB)?c._fileRenderSizeCB:function(a){return a+"o"},c.fileOnProgressCB=angular.isFunction(c._fileOnProgressCB)?c._fileOnProgressCB:function(a,b,c){return b+": "+c+"%"};var o=null;this.addRule=function(a,d){if(o||(o={}),0===Object.keys(d).length)throw"Bad rules declaration : in "+a+" : zero rule defined\n";angular.forEach(d,function(c,e){if(!(e in b))throw"Bad rule declaration : in "+a+" : unknown rule "+e+"\n";o[a]=d}),c.allowedExtensions+=(""===c.allowedExtensions?"":",")+a,i()},c.reorder=function(a,b,d){if(d&&d.stopPropagation(),!(0>b||b>=c.files.length)){var e=c.files[b];c.files[b]=c.files[a],c.files[a]=e}},this.reorder=c.reorder,c.crop=function(b,c){b&&b.stopPropagation(),c.$crop=c.$crop?c.$crop:{bounds:{top:0,bottom:0,left:0,right:0}};var d=e(c.$extension);d.crop&&(c.$source_file?a(c.$source_file,function(a){d.crop.limit(a,c,c.$crop.bounds,j)}):c.$source_url?d.crop.limit(c.$source_url,c,c.$crop.bounds,j):console.error("unable to find source for crop"))},c.onChanges=function(a,b,c,d,e,f){c&&c.length&&n(c)},c.cancel=function(a,b){b&&b.stopPropagation();var d=c.files[a];c.files.splice(a,1),d.progress.status===c.UPLOAD_TRANSFERING?d.$upload&&d.$upload.abort():m(),c.fileOnCancelCB(d)},c.$watch("simultaneousCur",function(){c.simultaneousCur<c.simultaneousMax&&m()});var p=c.files.splice(0,c.files.length);n(p,!0)}]}}])}(),function(){"use strict";angular.module("multiUpload").directive("movable",[function(){return{restrict:"A",scope:{movable:"=",index:"="},require:"^upload",replace:!0,link:function(a,b,c,d){if(a.movable===!0){b.bind("dragenter",function(a){a.preventDefault()}),b.bind("dragleave",function(a){}),b.bind("dragover",function(a){a.preventDefault()}),b.bind("drop",function(b){b.preventDefault(),""!==b.dataTransfer.getData("index")&&a.$apply(function(){d.reorder(b.dataTransfer.getData("index"),a.index)})});var e=angular.element(b[0].querySelector(".desktop"));e.attr("draggable",!0),e.bind("dragstart",function(b){b.dataTransfer.effectAllowed="move",b.dataTransfer.setData("index",a.index)}),e.bind("dragend",function(a){})}}}}])}(),function(){"use strict";angular.module("multiUpload").directive("rule",[function(){return{restrict:"E",scope:!0,require:"^^rules",replace:!0,template:"",link:function(a,b,c,d){var e,f=[];if(angular.forEach(c.$attr,function(b,d){"onError"===d?e=c[d]:f.push({key:d,value:a.$eval(c[d])})}),0===f.length)throw"Bad rule declaration : no rule defined in\n";angular.forEach(f,function(a){d.addRule(a.key,a.value,e)})}}}])}(),function(){"use strict";angular.module("multiUpload").directive("rules",[function(){return{restrict:"E",scope:{accept:"@"},require:"^^upload",replace:!0,template:"",link:function(a,b,c,d){d.addRule(a.accept,a.rules)},controller:["$scope",function(a){a.rules={},this.addRule=function(b,c,d){if(b in a.rules)throw"Same rules declared multiple times : previous declaration of "+b+'="'+a.rules[b].limit+'" /> redeclared here :\n';a.rules[b]={limit:c,onError:d}}}]}}])}(),function(){"use strict";angular.module("multiUpload").directive("topinfo",[function(){return{restrict:"E",scope:{},require:"^upload",replace:!0}}])}(),angular.module("multiUpload").run(["$templateCache",function(a){"use strict";a.put("directives/templates/upload.directive.html",'<div class="upload"\r\n	ngf-drop ngf-drop-disabled="!dropable"\r\n	ngf-multiple="allowMultiple"\r\n	ngf-change="onChanges($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)"\r\n	ngf-fix-orientation="true" ngf-stop-propagation="true"\r\n	>\r\n	<div class="topinfo" ng-transclude\r\n		ngf-select ngf-select-disabled="!selectable"\r\n		ngf-multiple="allowMultiple" ngf-accept="\'{{ allowedExtensions }}\'"\r\n		ngf-change="onChanges($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)"\r\n		ngf-fix-orientation="true" ngf-stop-propagation="true"\r\n		></div>\r\n	<ul>\r\n		<li class="file" movable="orderable" data-index="$index" ng-class="{\'error\': file.error}" ng-repeat="file in files">\r\n			<div ng-show="orderable && files.length > 1" class="grip">\r\n				<div class="desktop"></div>\r\n				<div class="mobile">\r\n					<div class="up" ng-click="reorder($index, $index - 1, $event)"></div>\r\n					<div class="down" ng-click="reorder($index, $index + 1, $event)"></div>\r\n				</div>\r\n			</div>\r\n			<div ng-show="file.$thumbnailable" class="thumbnail">\r\n				<img data-ng-src="{{ file.$thumbnail }}" alt="thumbnail {{ file.name }}" />\r\n			</div>\r\n			<div ng-show="file.$cropable" class="resize" ng-click="crop($event, file)"></div>\r\n			<div ng-show="(file.progress.status === UPLOAD_COMPLETE || file.progress.status === UPLOAD_OLD) && fileDownloadLink" class="name" ><a target="_blank" href="{{ fileDownloadLink(file) }}">{{ file.name }}</a></div>\r\n			<div ng-show="!((file.progress.status === UPLOAD_COMPLETE || file.progress.status === UPLOAD_OLD) && fileDownloadLink)" class="name">{{ file.name }}</div>\r\n			<!-- <div class="size">{{ fileRenderSizeCB(file.size) }}</div> -->\r\n			<div class="error" ng-show="file.error" title="{{ file.error }}">{{ file.error }}</div>\r\n			<div class="progression" ng-show="!file.error" >\r\n				<progress min="0" value="{{ file.progress.value }}" max="100"></progress>\r\n				<span>{{ fileOnProgressCB(file, file.progress.status, file.progress.value) }}</span>\r\n			</div>\r\n			<div class="delete" ng-click="cancel($index, $event)"></div>\r\n		</li>\r\n	</ul>\r\n</div>\r\n')}]);