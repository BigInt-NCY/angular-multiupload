var angularMultiUpload=angular.module("multiUpload",["ng-file-upload"]);angularMultiUpload=angularMultiUpload,angularMultiUpload.directive("movable",[function(){return{restrict:"A",scope:{movable:"=",index:"="},require:"^upload",replace:!0,link:function(a,b,c,d){if(a.movable===!0){b.bind("dragenter",function(a){a.preventDefault()}),b.bind("dragleave",function(a){}),b.bind("dragover",function(a){a.preventDefault()}),b.bind("drop",function(b){b.preventDefault(),""!==b.dataTransfer.getData("index")&&a.$apply(function(){d.reorder(b.dataTransfer.getData("index"),a.index)})});var e=angular.element(b[0].querySelector(".desktop"));e.attr("draggable",!0),e.bind("dragstart",function(b){b.dataTransfer.effectAllowed="move",b.dataTransfer.setData("index",a.index)}),e.bind("dragend",function(a){})}}}}]),angularMultiUpload.directive("rule",[function(){return{restrict:"E",scope:!0,require:"^^rules",replace:!0,template:"",link:function(a,b,c,d){var e,f=[];if(angular.forEach(c.$attr,function(b,d){"onError"===d?e=c[d]:f.push({key:d,value:a.$eval(c[d])})}),0===f.length)throw"Bad rule declaration : no rule defined in\n";angular.forEach(f,function(a){d.addRule(a.key,a.value,e)})}}}]),angularMultiUpload.directive("rules",[function(){return{restrict:"E",scope:{accept:"@"},require:"^^upload",replace:!0,template:"",link:function(a,b,c,d){d.addRule(a.accept,a.rules)},controller:["$scope",function(a){a.rules={},this.addRule=function(b,c,d){if(b in a.rules)throw"Same rules declared multiple times : previous declaration of "+b+'="'+a.rules[b].limit+'" /> redeclared here :\n';a.rules[b]={limit:c,onError:d}}}]}}]),angularMultiUpload.directive("topinfo",[function(){return{restrict:"E",scope:{},require:"^upload",replace:!0}}]),angularMultiUpload.directive("upload",[function(){return{restrict:"E",scope:{url:"@",method:"@",files:"=filesList",validRules:"=",fileOnCancelCB:"=fileOncancel",fileRenderSizeCB:"=fileRenderSize",fileOnProgressCB:"=fileOnprogress",fileUploadError:"@",fileExtensionError:"@",simultaneousMax:"@simultaneous"},transclude:!0,replace:!0,templateProvider:$templateCache.get("upload/directives/upload.directive.html"),link:function(a,b,c){a.dropable="dropable"in c,a.orderable="orderable"in c,a.selectable="selectable"in c,a.allowMultiple="multiple"in c,a.allowDuplicate=!("noDuplicate"in c)},controller:["$scope","Upload",function(a,b){function c(b){var c;for(var d in j)if(j.hasOwnProperty(d)){var e=a.getFilesMatchingRuleExtensions(d,b,!1);for(var f in j[d])if(j[d].hasOwnProperty(f))if(0===e.length){if(i[f](null,[],j[d][f],!1)!==!0)return!1}else for(c=0;c<e.length;c++)if(i[f](e[c],e,j[d][f],!1)!==!0)return!1}var g=a.files;b&&(g=b);var h=0;for(c=0;c<g.length;c++)for(var k in j)if(j.hasOwnProperty(k)){var l=k.split(",");-1!==l.indexOf(g[c].extension)&&h++}return h===g.length}function d(a,b){var c=new FileReader;c.onload=function(a){b(a.target.result)},c.readAsDataURL(a.source)}function e(b,c,d){0>d?d=0:d>100&&(d=100),b.progress.value=d,b.progress.status=c,a.fileOnProgressCB?b.progress.message=a.fileOnProgressCB(b.source,c,d):b.progress.message=d+"%"}function f(b){for(var c=0;c<a.files.length;c++){var d=a.files[c];if(d.name===b.name&&d.lastModified===b.lastModified&&d.size===b.size)return!1}return!0}function g(b){b&&b.length&&angular.forEach(b,function(b){var c=b.name.substr((~-b.name.lastIndexOf(".")>>>0)+1).toLowerCase();if(a.allowDuplicate||f(b)){var d={source:b,name:b.name,extension:c,size:b.size,type:b.type,lastModified:b.lastModified,progress:{value:0,status:a.PENDING,message:""},error:{failed:!0,reason:[]},thumbnail:null,thumbnailable:!1,crop:{bounds:{left:0,right:0,top:0,bottom:0},drawable:null},cropable:!1,_upload:null,upload:{code:0,data:null}};a.files.push(d)}})}function h(){a.files&&a.files.length&&angular.forEach(a.files,function(c){if(c.error.failed){var d=a.getFilesMatchingRuleExtensions(a.getRuleExtensionsForFileExtension(c.extension));c.error.failed=!1,c.error.reason=[];var f=a.getRulesForExtension(c.extension);f?angular.forEach(f,function(a,b){i[b](c,d,a,!0)}):(c.error.failed=!0,c.error.reason=a.fileExtensionError),c.thumbnailable&&!c.thumbnail&&a.thumbnail(c,c.source)}a.simultaneousCur<a.simultaneousMax&&c.progress.status===a.PENDING&&!c.error.failed&&(e(c,a.TRANSFERING,0),a.simultaneousCur++,c._upload=b.upload({url:a.url,data:{key:c.source},method:a.method}),c._upload.then(function(b){e(c,a.COMPLETE,100),a.simultaneousCur--,c.upload.data=b.data,c.upload.code=b.status},function(b){e(c,a.ERROR,0),c.error.failed=!0,c.error.reason=a.fileUploadError,a.simultaneousCur--},function(b){e(c,a.TRANSFERING,parseInt(100*b.loaded/b.total))})),a.simultaneousCur>=a.simultaneousMax})}a.PENDING=1,a.TRANSFERING=2,a.COMPLETE=3,a.ERROR=4,a.simultaneousCur=0,a.allowedExtensions="";var i={crop:function(a,b,c,d){return a&&d&&(a.cropable=!0),!0},count:function(a,b,c,d){var e,f,g=!1,h=!0,i=a&&d?b.length+1:b.length,j=c.limit,k=parseInt(j,10),l=j.split(",");return""===j||"0"===j?e=f=0:"*"===j||","===j||"."===j?e=f=-1:2===l.length?(e=""===l[0]?-1:parseInt(l[0]),f=""===l[1]?-1:parseInt(l[1]),"NaN"!==e&&"NaN"!==f||(g=!0,console.error("Bad limit value for count : "+j))):"NaN"!==k?e=f=k:(g=!0,console.error("Unhandled limit value for count : "+j)),void 0!==e&&void 0!==f?(e>f&&-1!==f&&(g=!0,console.error("Count minimum limit must be inferior to maximum limit : "+e+">"+f)),i>f&&-1!==f?g=!0:e>i&&-1!==e&&(h=!1)):g=!0,g&&(a&&d&&(a.error.failed=!0,a.error.reason+=" "+c.onError),h=!1),h},thumbnail:function(a,b,c,d){return a&&d&&(a.thumbnailable=!0),!0},validator:function(a,b,c,d){if(!a)return!0;var e=c.limit(a);return e.length>0?(a&&d&&(a.error.failed=!0,a.error.reason=[c.onError].concat(e)),!1):!0}},j={};this.addRule=function(b,c){if(0===Object.keys(c).length)throw"Bad rules declaration : in "+b+" : zero rule defined\n";angular.forEach(c,function(a,d){if(!(d in i))throw"Bad rule declaration : in "+b+" : unknown rule "+d+"\n";j[b]=c}),a.allowedExtensions+=(""===a.allowedExtensions?"":",")+b},a.validRules.run=c,a.reorder=function(b,c,d){if(d&&d.stopPropagation(),!(0>c||c>=a.files.length)){var e=a.files[c];a.files[c]=a.files[b],a.files[b]=e}},this.reorder=a.reorder,a.getRulesForExtension=function(a){var b;return 0===Object.keys(j).length?b:(b=null,angular.forEach(j,function(c,d){var e=d.split(",");return-1!==e.indexOf(a)?void(b=c):void 0}),b)},a.getRuleExtensionsForFileExtension=function(a){var b;return 0===Object.keys(j).length?b:(b=null,angular.forEach(j,function(c,d){var e=d.split(",");return-1!==e.indexOf(a)?void(b=d):void 0}),b)},a.getFilesMatchingRuleExtensions=function(b,c,d){var e=a.files;if(c&&(e=c),!b)return[];var f=[],g=b.split(",");return angular.forEach(e,function(a){-1===g.indexOf(a.extension)||(d||a.error.failed)&&!d||f.push(a)}),f},a.crop=function(b,c){b.stopPropagation();var e=a.getRulesForExtension(c.extension).crop;d(c,function(b){e.limit(b,c.crop,function(b){b===!0?a.thumbnail(c,c.crop.drawable,!0):a.thumbnail(c,c.source)})})},a.thumbnail=function(b,c,e){if(!b.thumbnailable)return void(b.thumbnail=null);if(e)return void(b.thumbnail=c);var f=a.getRulesForExtension(b.extension).thumbnail;f.limit!==!0?b.thumbnail=f.limit(c):d(b,function(a){b.thumbnail=a})},a.onChanges=function(a,b,c,d,e,f){c&&c.length&&(g(c),h())},a.cancel=function(b,c){c&&c.stopPropagation();var d=a.files[b];a.files.splice(b,1),d.progress.status===a.TRANSFERING?d._upload.abort():h(),a.fileOnCancelCB&&a.fileOnCancelCB(d)},a.$watch("simultaneousCur",function(){a.simultaneousCur<a.simultaneousMax&&h()})}]}}]),angular.module("multiUpload").run(["$templateCache",function(a){"use strict";a.put("directives/templates/upload.directive.html",'<div class="upload"\r\n	ngf-drop ngf-drop-disabled="!dropable"\r\n	ngf-multiple="allowMultiple"\r\n	ngf-change="onChanges($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)"\r\n	ngf-fix-orientation="true" ngf-stop-propagation="true"\r\n	>\r\n	<div class="topinfo" ng-transclude\r\n		ngf-select ngf-select-disabled="!selectable"\r\n		ngf-multiple="allowMultiple" ngf-accept="\'{{ allowedExtensions }}\'"\r\n		ngf-change="onChanges($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)"\r\n		ngf-fix-orientation="true" ngf-stop-propagation="true"\r\n		></div>\r\n	<ul>\r\n		<li class="file" movable="orderable" data-index="$index" ng-class="{\'error\': file.error.failed}" ng-repeat="file in files">\r\n			<div ng-show="orderable" class="grip">\r\n				<div class="desktop"></div>\r\n				<div class="mobile">\r\n					<div class="up" ng-click="reorder($index, $index - 1, $event)"></div>\r\n					<div class="down" ng-click="reorder($index, $index + 1, $event)"></div>\r\n				</div>\r\n			</div>\r\n			<div ng-show="file.thumbnailable" class="thumbnail">\r\n				<img src="{{ file.thumbnail }}" alt="thumbnail {{ file.name }}" />\r\n			</div>\r\n			<div ng-show="file.cropable" class="resize" ng-click="crop($event, file)"></div>\r\n			<div class="name">{{ file.name }}</div>\r\n			<div class="size">{{ fileRenderSizeCB(file.size) }}</div>\r\n			<div class="error" ng-show="file.error.failed" title="{{ file.error.reason }}">{{ file.error.reason }}</div>\r\n			<div class="progression">\r\n				<progress ng-show="!file.error.failed" min="0" value="{{ file.progress.value }}" max="100"></progress>\r\n				<span>{{ file.progress.message }}</span>\r\n			</div>\r\n			<div class="delete" ng-click="cancel($index, $event)"></div>\r\n		</li>\r\n	</ul>\r\n</div>\r\n')}]);