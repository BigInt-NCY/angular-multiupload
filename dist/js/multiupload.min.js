!function(){"use strict";var a={crop:function(a,b,c,d){return a&&d&&(a.$cropable=!0),!0},count:function(a,b,c,d){var e,f,g=!1,h=!0,i=a&&d?b.length+1:b.length,j=c.limit,k=parseInt(j,10),l=j.split(",");return""===j||"0"===j?e=f=0:"*"===j||","===j||"."===j?e=f=-1:2===l.length?(e=""===l[0]?-1:parseInt(l[0]),f=""===l[1]?-1:parseInt(l[1]),"NaN"!==e&&"NaN"!==f||(g=!0,console.error("Bad limit value for count : "+j))):"NaN"!==k?e=f=k:(g=!0,console.error("Unhandled limit value for count : "+j)),void 0!==e&&void 0!==f?(e>f&&-1!==f&&(g=!0,console.error("Count minimum limit must be inferior to maximum limit : "+e+">"+f)),i>f&&-1!==f?g=!0:e>i&&-1!==e&&(h=!1)):g=!0,g&&(a&&d&&(a.error=c.onError),h=!1),h},thumbnail:function(a,b,c,d){return a&&d&&(a.$thumbnailable=!0),!0},validator:function(a,b,c,d){if(!a)return!0;var e=c.limit(a);return e.length>0?(a&&d&&(a.error=c.onError),!1):!0}};angular.module("multiUpload",["ngFileUpload"]),angular.module("multiUpload").directive("upload",[function(b){return{restrict:"E",scope:{url:"=",multipartName:"=",method:"@",files:"=filesList",validRules:"=",fileGetFullPathCB:"=fileGetfullpath",fileOnCancelCB:"=fileOncancel",fileRenderSizeCB:"=fileRenderSize",fileOnProgressCB:"=fileOnprogress",fileUploadError:"@",fileExtensionError:"@",simultaneousMax:"@simultaneous"},transclude:!0,replace:!0,templateUrl:"directives/templates/upload.directive.html",link:function(a,b,c){if(angular.isUndefined(a.files))throw"files-list parameter is missing and is required.";if(angular.isUndefined(a.url))throw"url parameter is missing and is required.";a.dropable="dropable"in c,a.orderable="orderable"in c,a.selectable="selectable"in c,a.allowMultiple="multiple"in c,a.simultaneousMax=a.simultaneousMax?a.simultaneousMax:999,a.fileGetFullPathCB=angular.isFunction(a.fileGetFullPathCB)?a.fileGetFullPathCB:function(a){return a},a.fileRenderSizeCB=angular.isFunction(a.fileRenderSizeCB)?a.fileRenderSizeCB:function(a){return a+"o"},a.fileOnProgressCB=angular.isFunction(a.fileOnProgressCB)?a.fileOnProgressCB:function(a,b,c){return b+": "+c+"%"}},controller:["$scope","Upload",function(b,c){function d(a){var b;if(!l||0===Object.keys(l).length)return b;b=null;for(var c in l)if(l.hasOwnProperty(c)){var d=c.split(",");if(-1!==d.indexOf(a)&&(b=l[c]),null!==b)break}return b}function e(a){var b;if(!l||0===Object.keys(l).length)return b;b=null;for(var c in l)if(l.hasOwnProperty(c)){var d=c.split(",");if(-1!==d.indexOf(a)&&(b=c),null!==b)break}return b}function f(a,c,d){if(c=c?c:!1,d=d?d:b.files,!a)return[];var e=a.split(","),f=[];return angular.forEach(d,function(a){-1===e.indexOf(a.$extension)||(!c||a.error)&&c||f.push(a)}),f}function g(c,g,h){g=g?g:b.files,h=h?h:!1;var i=e(c.$extension);c.error=!0;var j=f(i,!0,g);delete c.error;var k=d(c.$extension),l=0;for(var m in k)if(k.hasOwnProperty(m)&&a[m](c,j,k[m],!0)!==!0){l=h||c.error?(!h&&c.error,-1):1;break}return l}function h(a,b,c){a.progress={value:c,status:b}}function i(a,b){a.error=b}function j(){b.files.length&&angular.forEach(b.files,function(a){if(a.error&&a.progress.status!==b.UPLOAD_ERROR&&0===g(a)&&delete a.error,a.$thumbnailable&&!a.$thumbnail&&b.thumbnail(a,a.source),b.simultaneousCur<b.simultaneousMax&&a.progress.status===b.UPLOAD_PENDING&&!a.error&&a.$source_file){h(a,b.UPLOAD_TRANSFERING,0),b.simultaneousCur++;var d={};d[b.multipart?angular.isFunction(scope.multipartName)?scope.multipartName(a.name):scope.multipartName:"key"]=a.$source_file,a.$upload=c.upload({url:angular.isFunction(b.multipartName)?b.url(a.name):b.url,data:d,method:b.method}).then(function(c){h(a,b.UPLOAD_COMPLETE,100),b.simultaneousCur--},function(c){h(a,b.UPLOAD_ERROR,0),i(a,b.fileUploadError||"upload error"),b.simultaneousCur--},function(c){h(a,b.UPLOAD_TRANSFERING,parseInt(100*c.loaded/c.total))})}})}function k(a,c){a&&a.length&&(angular.forEach(a,function(a){if(!a.name)return void console.warn('add file to files failed because file object does not have "name" key.');var d=a.name.substr((~-a.name.lastIndexOf(".")>>>0)+1).toLowerCase(),e={name:a.name,error:!0,$extension:d};c?(h(e,b.UPLOAD_OLD,100),e.$source_url=b.fileGetFullPathCB(e.name)):(h(e,b.UPLOAD_PENDING,0),e.$source_file=a),b.files.push(e)}),j())}b.UPLOAD_PENDING=1,b.UPLOAD_TRANSFERING=2,b.UPLOAD_COMPLETE=3,b.UPLOAD_ERROR=4,b.UPLOAD_OLD=5,b.simultaneousCur=0,b.allowedExtensions="";var l=null;this.addRule=function(c,d){if(l||(l={}),0===Object.keys(d).length)throw"Bad rules declaration : in "+c+" : zero rule defined\n";angular.forEach(d,function(b,e){if(!(e in a))throw"Bad rule declaration : in "+c+" : unknown rule "+e+"\n";l[c]=d}),b.allowedExtensions+=(""===b.allowedExtensions?"":",")+c},b.reorder=function(a,c,d){if(d&&d.stopPropagation(),!(0>c||c>=b.files.length)){var e=b.files[c];b.files[c]=b.files[a],b.files[a]=e}},this.reorder=b.reorder,b.crop=function(a,b){},b.thumbnail=function(a,b,c){},b.onChanges=function(a,b,c,d,e,f){c&&c.length&&k(c)},b.cancel=function(a,c){c&&c.stopPropagation();var d=b.files[a];b.files.splice(a,1),d.progress.status===b.UPLOAD_TRANSFERING?d.$upload&&d.$upload.abort():j(),b.fileOnCancelCB(d)},b.$watch("simultaneousCur",function(){b.simultaneousCur<b.simultaneousMax&&j()});var m=b.files.splice(0,b.files.length);k(m,!0)}]}}])}(),function(){"use strict";angular.module("multiUpload").directive("movable",[function(){return{restrict:"A",scope:{movable:"=",index:"="},require:"^upload",replace:!0,link:function(a,b,c,d){if(a.movable===!0){b.bind("dragenter",function(a){a.preventDefault()}),b.bind("dragleave",function(a){}),b.bind("dragover",function(a){a.preventDefault()}),b.bind("drop",function(b){b.preventDefault(),""!==b.dataTransfer.getData("index")&&a.$apply(function(){d.reorder(b.dataTransfer.getData("index"),a.index)})});var e=angular.element(b[0].querySelector(".desktop"));e.attr("draggable",!0),e.bind("dragstart",function(b){b.dataTransfer.effectAllowed="move",b.dataTransfer.setData("index",a.index)}),e.bind("dragend",function(a){})}}}}])}(),function(){"use strict";angular.module("multiUpload").directive("rule",[function(){return{restrict:"E",scope:!0,require:"^^rules",replace:!0,template:"",link:function(a,b,c,d){var e,f=[];if(angular.forEach(c.$attr,function(b,d){"onError"===d?e=c[d]:f.push({key:d,value:a.$eval(c[d])})}),0===f.length)throw"Bad rule declaration : no rule defined in\n";angular.forEach(f,function(a){d.addRule(a.key,a.value,e)})}}}])}(),function(){"use strict";angular.module("multiUpload").directive("rules",[function(){return{restrict:"E",scope:{accept:"@"},require:"^^upload",replace:!0,template:"",link:function(a,b,c,d){d.addRule(a.accept,a.rules)},controller:["$scope",function(a){a.rules={},this.addRule=function(b,c,d){if(b in a.rules)throw"Same rules declared multiple times : previous declaration of "+b+'="'+a.rules[b].limit+'" /> redeclared here :\n';a.rules[b]={limit:c,onError:d}}}]}}])}(),function(){"use strict";angular.module("multiUpload").directive("topinfo",[function(){return{restrict:"E",scope:{},require:"^upload",replace:!0}}])}(),angular.module("multiUpload").run(["$templateCache",function(a){"use strict";a.put("directives/templates/upload.directive.html",'<div class="upload"\r\n	ngf-drop ngf-drop-disabled="!dropable"\r\n	ngf-multiple="allowMultiple"\r\n	ngf-change="onChanges($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)"\r\n	ngf-fix-orientation="true" ngf-stop-propagation="true"\r\n	>\r\n	<div class="topinfo" ng-transclude\r\n		ngf-select ngf-select-disabled="!selectable"\r\n		ngf-multiple="allowMultiple" ngf-accept="\'{{ allowedExtensions }}\'"\r\n		ngf-change="onChanges($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)"\r\n		ngf-fix-orientation="true" ngf-stop-propagation="true"\r\n		></div>\r\n	<ul>\r\n		<li class="file" movable="orderable" data-index="$index" ng-class="{\'error\': file.error}" ng-repeat="file in files">\r\n			<div ng-show="orderable && files.length > 1" class="grip">\r\n				<div class="desktop"></div>\r\n				<div class="mobile">\r\n					<div class="up" ng-click="reorder($index, $index - 1, $event)"></div>\r\n					<div class="down" ng-click="reorder($index, $index + 1, $event)"></div>\r\n				</div>\r\n			</div>\r\n			<!-- <div ng-show="file.thumbnailable" class="thumbnail">\r\n				<img src="{{ file.thumbnail }}" alt="thumbnail {{ file.name }}" />\r\n			</div> -->\r\n			<!-- <div ng-show="file.cropable" class="resize" ng-click="crop($event, file)"></div> -->\r\n			<div class="name">{{ file.name }}</div>\r\n			<!-- <div class="size">{{ fileRenderSizeCB(file.size) }}</div> -->\r\n			<div class="error" ng-show="file.error" title="{{ file.error }}">{{ file.error }}</div>\r\n			<div class="progression" ng-show="!file.error" >\r\n				<progress min="0" value="{{ file.progress.value }}" max="100"></progress>\r\n				<span>{{ fileOnProgressCB(file.name, file.progress.status, file.progress.value) }}</span>\r\n			</div>\r\n			<div class="delete" ng-click="cancel($index, $event)"></div>\r\n		</li>\r\n	</ul>\r\n</div>\r\n')}]);